{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KAVI\\\\OneDrive\\\\Documents\\\\FS\\\\Medicine Remainder App\\\\medicineremainder\\\\src\\\\components\\\\MedicineReminder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MedicineReminder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MedicineReminder = () => {\n  _s();\n  const [medicines, setMedicines] = useState([]);\n  const [form, setForm] = useState({\n    name: '',\n    dosage: '',\n    time: '',\n    email: ''\n  });\n  useEffect(() => {\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission();\n    }\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      const currentTime = now.toTimeString().slice(0, 5);\n      medicines.forEach(med => {\n        if (med.time === currentTime) {\n          notifyUser(med);\n        }\n      });\n    }, 60000);\n    return () => clearInterval(interval);\n  }, [medicines]);\n  const notifyUser = med => {\n    if (Notification.permission === 'granted') {\n      new Notification('Medicine Reminder', {\n        body: `${med.name} - ${med.dosage} now!`,\n        icon: 'https://cdn-icons-png.flaticon.com/512/2920/2920244.png'\n      });\n    }\n  };\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const updatedMedicines = [...medicines, form];\n    setMedicines(updatedMedicines);\n    setForm({\n      name: '',\n      dosage: '',\n      time: '',\n      email: ''\n    });\n    try {\n      const response = await fetch('http://localhost:5000/api/medicines', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(form)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save medicine reminder');\n      }\n      console.log('Medicine reminder saved successfully');\n    } catch (error) {\n      console.error('Error saving medicine reminder:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medicine Reminder App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Medicine Name\",\n        value: form.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"dosage\",\n        placeholder: \"Dosage\",\n        value: form.dosage,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"time\",\n        value: form.time,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Scheduled Medicines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: medicines.map((med, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [med.name, \" - \", med.dosage, \" at \", med.time]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicineReminder, \"BX2b6VWVNzKmwrlt0xOnnG+UBqY=\");\n_c = MedicineReminder;\nexport default MedicineReminder;\nvar _c;\n$RefreshReg$(_c, \"MedicineReminder\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MedicineReminder","_s","medicines","setMedicines","form","setForm","name","dosage","time","email","Notification","permission","requestPermission","interval","setInterval","now","Date","currentTime","toTimeString","slice","forEach","med","notifyUser","clearInterval","body","icon","handleChange","e","target","value","handleSubmit","preventDefault","updatedMedicines","response","fetch","method","headers","JSON","stringify","ok","Error","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","map","index","_c","$RefreshReg$"],"sources":["C:/Users/KAVI/OneDrive/Documents/FS/Medicine Remainder App/medicineremainder/src/components/MedicineReminder.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MedicineReminder.css';\r\n\r\nconst MedicineReminder = () => {\r\n  const [medicines, setMedicines] = useState([]);\r\n  const [form, setForm] = useState({ name: '', dosage: '', time: '', email: '' });\r\n\r\n  useEffect(() => {\r\n    if (Notification.permission !== 'granted') {\r\n      Notification.requestPermission();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = new Date();\r\n      const currentTime = now.toTimeString().slice(0, 5);\r\n      medicines.forEach((med) => {\r\n        if (med.time === currentTime) {\r\n          notifyUser(med);\r\n        }\r\n      });\r\n    }, 60000); \r\n\r\n    return () => clearInterval(interval);\r\n  }, [medicines]);\r\n\r\n  const notifyUser = (med) => {\r\n    if (Notification.permission === 'granted') {\r\n      new Notification('Medicine Reminder', {\r\n        body: `${med.name} - ${med.dosage} now!`,\r\n        icon: 'https://cdn-icons-png.flaticon.com/512/2920/2920244.png',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const updatedMedicines = [...medicines, form];\r\n    setMedicines(updatedMedicines);\r\n    setForm({ name: '', dosage: '', time: '', email: '' });\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/medicines', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(form),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to save medicine reminder');\r\n      }\r\n\r\n      console.log('Medicine reminder saved successfully');\r\n    } catch (error) {\r\n      console.error('Error saving medicine reminder:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Medicine Reminder App</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Medicine Name\"\r\n          value={form.name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"dosage\"\r\n          placeholder=\"Dosage\"\r\n          value={form.dosage}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"time\"\r\n          name=\"time\"\r\n          value={form.time}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Add Reminder</button>\r\n      </form>\r\n\r\n      <h2>Scheduled Medicines</h2>\r\n      <ul>\r\n        {medicines.map((med, index) => (\r\n          <li key={index}>\r\n            {med.name} - {med.dosage} at {med.time}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicineReminder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}